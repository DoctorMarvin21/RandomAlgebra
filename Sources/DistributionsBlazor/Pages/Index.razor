@page "/"
@inherits MainComponent
@using Plotly.Blazor
@using Plotly.Blazor.LayoutLib
@using Plotly.Blazor.Traces
@using RandomAlgebra.Distributions.Settings

<MudTabs Elevation="5" Rounded="true" ApplyEffectsToContainer="true" Class="ma-4">
    <MudTabPanel Text="Evaluation">
        <MudPaper Square="true" Elevation="0" Class="d-flex flex-column gap-4 pa-4">
            <MudTextField Label="Model"
                Margin="MudBlazor.Margin.Dense" Variant="Variant.Outlined"
                @bind-Value="Configuration.Expression" />
            <MudTable Items="Configuration.ExpressionArguments" Style="width:min-content;" Dense="true" Hover="false">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Univariate Distributions</MudText>
                    <MudSpacer />
                    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" DisableElevation="true" Size="Size.Small"
                        OnClick="DistributionsDialogProvider.AddItem"/>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Argument</MudTh>
                    <MudTh>Distribution</MudTh>
                    <MudTh>Parameters</MudTh>
                    <MudTh>Action</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Argument</MudTd>
                    <MudTd>@context.SettingsType.Name</MudTd>
                    <MudTd>@context.Settings.Settings</MudTd>
                    <MudTd>
                        <MudStack Row="true" Spacing="2">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small"
                                OnClick="() => DistributionsDialogProvider.EditItem(context)"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Small"
                                OnClick="() => DistributionsDialogProvider.DeleteItem(context)"></MudIconButton>
                        </MudStack>
                    </MudTd>
                </RowTemplate>
            </MudTable>
            <MudTable Items="Configuration.MultivariateExpressionArguments" Style="width:min-content;" Dense="true" Hover="false">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Multivariate Distributions</MudText>
                    <MudSpacer />
                    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" DisableElevation="true" Size="Size.Small"
                        OnClick="MultivariateDistributionsDialogProvider.AddItem"/>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Arguments</MudTh>
                    <MudTh>Distribution Type</MudTh>
                    <MudTh>Actions</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.JoinedArguments</MudTd>
                    <MudTd>@context.SettingsType.Name</MudTd>
                    <MudTd>
                        <MudStack Row="true" Spacing="2">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small"
                                OnClick="() => MultivariateDistributionsDialogProvider.EditItem(context)"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Small"
                                OnClick="() => MultivariateDistributionsDialogProvider.DeleteItem(context)"></MudIconButton>
                        </MudStack>
                    </MudTd>
                </RowTemplate>
            </MudTable>
            <MudButton Disabled="IsInProgress"
                Style="width:100px;"
                Variant="Variant.Filled" DisableElevation=true Color="Color.Primary"
                OnClick="Process">Evaluate</MudButton>

            @if (EvaluationError != null)
            {
                <MudAlert Severity="Severity.Error">@EvaluationError</MudAlert>
            }

            @if (IsInProgress)
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" />   
            }
        </MudPaper>
    </MudTabPanel>
    <MudTabPanel Text="Settings">
        <MudPaper Square="true" Elevation="0" Class="d-flex flex-wrap gap-4 pa-4">
            <MudPaper Elevation="3" Class="d-flex flex-column gap-4 pa-4">
                <MudText Typo="Typo.subtitle2">
                    Common Parameters
                </MudText>
                <MudNumericField Label="Probability" Step=".1" Format="F3" Min=0 Max=1
                    @bind-Value=Configuration.Probability>
                </MudNumericField>
                <MudNumericField Label="Chart Points" Min=1 Max=100000
                    @bind-Value=Configuration.ChartPoints>
                </MudNumericField>
            </MudPaper>
            <MudPaper Elevation="3" Class="d-flex flex-column gap-4 pa-4">
                <MudCheckBox Dense="true" Color="Color.Primary" Size="Size.Small"
                    @bind-Checked="Configuration.EvaluateRandomAlgebra">
                    <MudText Typo="Typo.subtitle2">
                        Random Algebra
                    </MudText>
                </MudCheckBox>
                <MudNumericField Label="Samples" Min=1 Max=100000
                    Disabled=@(!Configuration.EvaluateRandomAlgebra)
                    @bind-Value=Configuration.Samples>
                </MudNumericField>
            </MudPaper>
            <MudPaper Elevation="3" Class="d-flex flex-column gap-4 pa-4">
                <MudCheckBox Dense="true" Color="Color.Primary" Size="Size.Small"
                    @bind-Checked="Configuration.EvaluateMonteCarlo">
                    <MudText Typo="Typo.subtitle2">
                        Monte Carlo
                    </MudText>
                </MudCheckBox>
                <MudNumericField Label="Experiments" Min=1 Max=100000000
                    Disabled=@(!Configuration.EvaluateMonteCarlo)
                    @bind-Value=Configuration.Experiments>
                </MudNumericField>
                <MudNumericField Label="Pockets" Min=1 Max=100000
                    Disabled=@(!Configuration.EvaluateMonteCarlo)
                    @bind-Value=Configuration.Pockets>
                </MudNumericField>
            </MudPaper>
        </MudPaper>
    </MudTabPanel>
</MudTabs>

@if (IsCalculated)
{
    <MudTabs Elevation="5" Rounded="true" ApplyEffectsToContainer="true" Class="ma-4">
        <MudTabPanel Text="Probability Density Function">
            <MudPaper Square="true" Elevation="0" Class="pa-2">
                <PlotlyChart @bind-Config="config" @bind-Layout="layout" @bind-Data="PdfData" />
            </MudPaper>
        </MudTabPanel>
        <MudTabPanel Text="Cumulative Distribution Function">
            <MudPaper Square="true" Elevation="0" Class="pa-2">
                <PlotlyChart @bind-Config="config" @bind-Layout="layout" @bind-Data="CdfData" />
            </MudPaper>
            
        </MudTabPanel>
        <MudTabPanel Text="Results">
            <MudPaper Square="true" Elevation="0" Class="pa-4">
                <MudTable Items="Results.DistributionParameters" Dense="true" Hover="false">
                    <HeaderContent>
                        <MudTh>Parameter</MudTh>
                        <MudTh>Random Algebra</MudTh>
                        <MudTh>Monte Carlo</MudTh>
                        <MudTh>Ratio, %</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Name</MudTd>
                        <MudTd>@context.RandomsAlgebra</MudTd>
                        <MudTd>@context.MonteCarlo</MudTd>
                        <MudTd>@context.PersentRatio</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudTabPanel>
    </MudTabs>
}

<MudOverlay @bind-Visible="DistributionsDialogProvider.IsDialogOpen" DarkBackground="true"
    Style="display:flex;justify-content:center;align-items:stretch;flex-direction:column;">
    <MudPaper Class="pl-6 pt-6" Style="margin:0 auto;width:90%;max-width:600px;">
        <MudText Typo="Typo.h6">
            Edit Distribution
        </MudText>
        <MudStack Spacing="2" Class="pt-2 pr-5 pb-2" Style="max-height:400px;overflow-y:scroll;">
            <MudTextField Variant="Variant.Outlined" Label="Argument"
                @bind-Value="@DistributionsDialogProvider.Item.Argument" />
            <MudSelect @bind-Value="@DistributionsDialogProvider.Item.SettingsType"
                Variant="Variant.Outlined"
                Label="Distribution">
                @foreach (var item in NameAndSettingType.UnvariateSettingTypes)
                {
                    <MudSelectItem Value="@item">@item.Name</MudSelectItem>
                }
            </MudSelect>
            @if (DistributionsDialogProvider.Item.Settings is MultivariateBasedNormalSettingsSource multivariateBased)
            {
                <MudNumericField Label="Dimensions" Min=1 Max=100
                    @bind-Value=multivariateBased.Dimension>
                </MudNumericField>

                <MudTable @ref="@multivariateBased.CoefficientsTable" Items="multivariateBased.CoefficientBindings" Dense="true" Hover="false">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Coefficients</MudText>
                    </ToolBarContent>
                    <HeaderContent>
                        @for (int i = 0; i < multivariateBased.Dimension; i++)
                        {
                            string header = $"c{i + 1}";
                            <MudTh>@header</MudTh>
                        }
                    </HeaderContent>
                    <RowTemplate>
                        @for (int i = 0; i < @context.Length; i++)
                        {
                            var localVariable = context[i];
                            <MudTd>@localVariable.Value</MudTd>
                        }
                    </RowTemplate>
                    <RowEditingTemplate>
                        @for (int i = 0; i < @context.Length; i++)
                        {
                            var localVariable = context[i];
                            <MudTd>
                                <MudTextField @bind-Value="@localVariable.Value" Margin="MudBlazor.Margin.Dense" />
                            </MudTd>
                        }
                    </RowEditingTemplate>
                </MudTable>

                <MudTable @ref="@multivariateBased.MultivariateSettingsSource.MeansTable" Items="multivariateBased.MultivariateSettingsSource.MeanBindings" Dense="true" Hover="false">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Means</MudText>
                    </ToolBarContent>
                    <HeaderContent>
                        @for (int i = 0; i < multivariateBased.Dimension; i++)
                        {
                            string header = $"μ{i + 1}";
                            <MudTh>@header</MudTh>
                        }
                    </HeaderContent>
                    <RowTemplate>
                        @for (int i = 0; i < @context.Length; i++)
                        {
                            var localVariable = context[i];
                            <MudTd>@localVariable.Value</MudTd>
                        }
                    </RowTemplate>
                    <RowEditingTemplate>
                        @for (int i = 0; i < @context.Length; i++)
                        {
                            var localVariable = context[i];
                            <MudTd>
                                <MudTextField @bind-Value="@localVariable.Value" Margin="MudBlazor.Margin.Dense" />
                            </MudTd>
                        }
                    </RowEditingTemplate>
                </MudTable>

                <MudTable @ref="@multivariateBased.MultivariateSettingsSource.CovarianceTable" Items="multivariateBased.MultivariateSettingsSource.CovarianceBindings" Dense="true" Hover="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Covariance Matrix</MudText>
                    </ToolBarContent>
                    <RowTemplate>
                        @for (int i = 0; i < @context.Length; i++)
                        {
                            var localVariable = context[i];
                            <MudTd>@localVariable.Value</MudTd>
                        }
                    </RowTemplate>
                    <RowEditingTemplate>
                        @for (int i = 0; i < @context.Length; i++)
                        {
                            var localVariable = context[i];
                            <MudTd>
                                <MudTextField @bind-Value="@localVariable.Value" Margin="MudBlazor.Margin.Dense" />
                            </MudTd>
                        }
                    </RowEditingTemplate>
                </MudTable>
            }
            else
            {
                @foreach (var item in DistributionsDialogProvider.Item.Settings.Bindings)
                {
                    <MudTextField Label="@item.Name" Variant="Variant.Outlined"
                        @bind-Value="item.Value" />
                }
            }
        </MudStack>
        <MudStack Spacing="2" Row="true" Justify="Justify.FlexEnd" Class="pl-6 pr-6 pb-6">
            @if (DistributionsDialogProvider.DialogMode == DialogMode.Add)
            {
                <MudButton OnClick="DistributionsDialogProvider.DialogCancel">Cancel</MudButton>
            }
            <MudButton Color="Color.Primary" OnClick="DistributionsDialogProvider.DialogOK">OK</MudButton>
        </MudStack>
    </MudPaper>
</MudOverlay>

<MudOverlay @bind-Visible="MultivariateDistributionsDialogProvider.IsDialogOpen" DarkBackground="true"
    Style="display:flex;justify-content:center;align-items:stretch;flex-direction:column;">
    <MudPaper Class="pl-6 pt-6" Style="margin:0 auto;width:90%;max-width:600px;">
        <MudText Typo="Typo.h6">
            Edit Distribution
        </MudText>
        <MudStack Spacing="2" Class="pt-2 pr-5 pb-2" Style="max-height:400px;overflow-y:scroll;">
            <MudSelect @bind-Value="@MultivariateDistributionsDialogProvider.Item.SettingsType"
                Variant="Variant.Outlined"
                Label="Distribution">
                @foreach (var item in NameAndSettingType.MultivariateSettingTypes)
                {
                    <MudSelectItem Value="@item">@item.Name</MudSelectItem>
                }
            </MudSelect>

            @if (MultivariateDistributionsDialogProvider.Item.Settings is MultivariateTSettingsSource tSource)
            {
                <MudNumericField Label="Degrees of freedom"
                    @bind-Value=tSource.DegreesOfFreedom>
                </MudNumericField>
            }

            <MudNumericField Label="Dimensions" Min=1 Max=100
                @bind-Value=MultivariateDistributionsDialogProvider.Item.Dimension>
            </MudNumericField>

            <MudTable @ref="@MultivariateDistributionsDialogProvider.Item.ArgumentsTable" Items="MultivariateDistributionsDialogProvider.Item.ArgumentsBindings" Dense="true" Hover="false">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Arguments</MudText>
                </ToolBarContent>
                <HeaderContent>
                    @for (int i = 0; i < MultivariateDistributionsDialogProvider.Item.Dimension; i++)
                    {
                        string header = $"D{i + 1}";
                        <MudTh>@header</MudTh>
                    }
                </HeaderContent>
                <RowTemplate>
                    @for (int i = 0; i < @context.Length; i++)
                    {
                        var localVariable = context[i];
                        <MudTd>@localVariable.Value</MudTd>
                    }
                </RowTemplate>
                <RowEditingTemplate>
                    @for (int i = 0; i < @context.Length; i++)
                    {
                        var localVariable = context[i];
                        <MudTd>
                            <MudTextField @bind-Value="@localVariable.Value" Margin="MudBlazor.Margin.Dense" />
                        </MudTd>
                    }
                </RowEditingTemplate>
            </MudTable>

            <MudTable @ref="@MultivariateDistributionsDialogProvider.Item.Settings.MeansTable" Items="MultivariateDistributionsDialogProvider.Item.Settings.MeanBindings" Dense="true" Hover="false">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Means</MudText>
                </ToolBarContent>
                <HeaderContent>
                    @for (int i = 0; i < MultivariateDistributionsDialogProvider.Item.Dimension; i++)
                    {
                        string header = $"μ{i + 1}";
                        <MudTh>@header</MudTh>
                    }
                </HeaderContent>
                <RowTemplate>
                    @for (int i = 0; i < @context.Length; i++)
                    {
                        var localVariable = context[i];
                        <MudTd>@localVariable.Value</MudTd>
                    }
                </RowTemplate>
                <RowEditingTemplate>
                    @for (int i = 0; i < @context.Length; i++)
                    {
                        var localVariable = context[i];
                        <MudTd>
                            <MudTextField @bind-Value="@localVariable.Value" Margin="MudBlazor.Margin.Dense" />
                        </MudTd>
                    }
                </RowEditingTemplate>
            </MudTable>

            <MudTable @ref="@MultivariateDistributionsDialogProvider.Item.Settings.CovarianceTable" Items="MultivariateDistributionsDialogProvider.Item.Settings.CovarianceBindings" Dense="true" Hover="true">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Covariance Matrix</MudText>
                </ToolBarContent>
                <RowTemplate>
                    @for (int i = 0; i < @context.Length; i++)
                    {
                        var localVariable = context[i];
                        <MudTd>@localVariable.Value</MudTd>
                    }
                </RowTemplate>
                <RowEditingTemplate>
                    @for (int i = 0; i < @context.Length; i++)
                    {
                        var localVariable = context[i];
                        <MudTd>
                            <MudTextField @bind-Value="@localVariable.Value" Margin="MudBlazor.Margin.Dense" />
                        </MudTd>
                    }
                </RowEditingTemplate>
            </MudTable>
        </MudStack>
        <MudStack Spacing="2" Row="true" Justify="Justify.FlexEnd" Class="pl-6 pr-6 pb-6">
            @if (MultivariateDistributionsDialogProvider.DialogMode == DialogMode.Add)
            {
                <MudButton OnClick="MultivariateDistributionsDialogProvider.DialogCancel">Cancel</MudButton>
            }
            <MudButton Color="Color.Primary" OnClick="MultivariateDistributionsDialogProvider.DialogOK">OK</MudButton>
        </MudStack>
    </MudPaper>
</MudOverlay>

<MudDialog IsVisible=@DistributionsDialogProvider.IsDeleteDialogOpen>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Remove Distribution
        </MudText>
    </TitleContent>
    <DialogContent>
        Do you really want to delete distribution with argument "@(DistributionsDialogProvider.Item.Argument)"?
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="DistributionsDialogProvider.CancelDelete">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="DistributionsDialogProvider.CommitDelete">OK</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog IsVisible=@MultivariateDistributionsDialogProvider.IsDeleteDialogOpen>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Remove Distribution
        </MudText>
    </TitleContent>
    <DialogContent>
        Do you really want to delete distribution with arguments "@(MultivariateDistributionsDialogProvider.Item.JoinedArguments)"?
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="MultivariateDistributionsDialogProvider.CancelDelete">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="MultivariateDistributionsDialogProvider.CommitDelete">OK</MudButton>
    </DialogActions>
</MudDialog>

@code {
    DialogOptions editDialogOptions = new() { CloseOnEscapeKey = false };
    Config config = new Config { Responsive = true };

    Layout layout = new Layout
    {
        Legend = new Plotly.Blazor.LayoutLib.Legend { Orientation = Plotly.Blazor.LayoutLib.LegendLib.OrientationEnum.H }
    };
}